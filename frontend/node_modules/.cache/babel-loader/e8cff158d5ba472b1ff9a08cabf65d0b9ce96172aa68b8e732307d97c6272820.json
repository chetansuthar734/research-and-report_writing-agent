{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/chetan/Desktop/research&report_writing agent/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useStream } from \"@langchain/langgraph-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState();\n  const [input, setInput] = useState(\"\");\n\n  // Attach to your LangGraph stream\n  const {\n    stream,\n    send\n  } = useStream({\n    apiUrl: \"http://localhost:8000/graph\",\n    // your FastAPI/LangGraph endpoint\n    graphId: \"chatbot\" // graph ID from LangGraph\n  });\n\n  // Listen to new stream events\n  React.useEffect(() => {\n    if (!stream) return;\n    const onMessage = event => {\n      if (event.type === \"content\") {\n        setMessages(prev => [...prev, {\n          role: \"ai\",\n          content: event.content\n        }]);\n      }\n    };\n    stream.on(\"data\", onMessage);\n    return () => {\n      stream.off(\"data\", onMessage);\n    };\n  }, [stream]);\n\n  // Send user input\n  const handleSend = () => {\n    if (!input.trim()) return;\n    setMessages(prev => [...prev, {\n      role: \"user\",\n      content: input\n    }]);\n    send({\n      input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border rounded-lg p-3 h-96 overflow-y-auto space-y-2 bg-gray-50\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-lg ${msg.role === \"user\" ? \"bg-blue-500 text-white self-end\" : \"bg-gray-200 text-black\"}`,\n        children: msg.content\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 border rounded-l-lg p-2\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"bg-blue-600 text-white px-4 rounded-r-lg\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wX03BVKP1BN4C/c47/0/6QSkQWo=\", false, function () {\n  return [useStream];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","useStream","jsxDEV","_jsxDEV","App","messages","setMessages","input","setInput","stream","send","apiUrl","graphId","useEffect","onMessage","event","type","prev","role","content","on","off","handleSend","trim","className","children","map","msg","i","fileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/chetan/Desktop/research&report_writing agent/frontend/src/App.js"],"sourcesContent":["\n\n\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useStream } from \"@langchain/langgraph-react\";\n\nexport default function App() {\n  const [messages, setMessages] = useState();\n  const [input, setInput] = useState(\"\");\n\n  // Attach to your LangGraph stream\n  const { stream, send } = useStream({\n    apiUrl: \"http://localhost:8000/graph\", // your FastAPI/LangGraph endpoint\n    graphId: \"chatbot\", // graph ID from LangGraph\n  });\n\n  // Listen to new stream events\n  React.useEffect(() => {\n    if (!stream) return;\n\n    const onMessage = (event) => {\n      if (event.type === \"content\") {\n        setMessages((prev) => [...prev, { role: \"ai\", content: event.content }]);\n      }\n    };\n\n    stream.on(\"data\", onMessage);\n\n    return () => {\n      stream.off(\"data\", onMessage);\n    };\n  }, [stream]);\n\n  // Send user input\n  const handleSend = () => {\n    if (!input.trim()) return;\n    setMessages((prev) => [...prev, { role: \"user\", content: input }]);\n    send({ input });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"p-4 max-w-xl mx-auto\">\n      <div className=\"border rounded-lg p-3 h-96 overflow-y-auto space-y-2 bg-gray-50\">\n        {messages.map((msg, i) => (\n          <div\n            key={i}\n            className={`p-2 rounded-lg ${\n              msg.role === \"user\"\n                ? \"bg-blue-500 text-white self-end\"\n                : \"bg-gray-200 text-black\"\n            }`}\n          >\n            {msg.content}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-4 flex\">\n        <input\n          className=\"flex-1 border rounded-l-lg p-2\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n        />\n        <button\n          onClick={handleSend}\n          className=\"bg-blue-600 text-white px-4 rounded-r-lg\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"AAEA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEb,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAP,EAAA;EAC5B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM;IAAES,MAAM;IAAEC;EAAK,CAAC,GAAGT,SAAS,CAAC;IACjCU,MAAM,EAAE,6BAA6B;IAAE;IACvCC,OAAO,EAAE,SAAS,CAAE;EACtB,CAAC,CAAC;;EAEF;EACAb,KAAK,CAACc,SAAS,CAAC,MAAM;IACpB,IAAI,CAACJ,MAAM,EAAE;IAEb,MAAMK,SAAS,GAAIC,KAAK,IAAK;MAC3B,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,EAAE;QAC5BV,WAAW,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAEJ,KAAK,CAACI;QAAQ,CAAC,CAAC,CAAC;MAC1E;IACF,CAAC;IAEDV,MAAM,CAACW,EAAE,CAAC,MAAM,EAAEN,SAAS,CAAC;IAE5B,OAAO,MAAM;MACXL,MAAM,CAACY,GAAG,CAAC,MAAM,EAAEP,SAAS,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACf,KAAK,CAACgB,IAAI,CAAC,CAAC,EAAE;IACnBjB,WAAW,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEZ;IAAM,CAAC,CAAC,CAAC;IAClEG,IAAI,CAAC;MAAEH;IAAM,CAAC,CAAC;IACfC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEL,OAAA;IAAKqB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCtB,OAAA;MAAKqB,SAAS,EAAC,iEAAiE;MAAAC,QAAA,EAC7EpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACnBzB,OAAA;QAEEqB,SAAS,EAAE,kBACTG,GAAG,CAACT,IAAI,KAAK,MAAM,GACf,iCAAiC,GACjC,wBAAwB,EAC3B;QAAAO,QAAA,EAEFE,GAAG,CAACR;MAAO,GAPPS,CAAC;QAAAC,QAAA,EAAAjC,YAAA;QAAAkC,UAAA;QAAAC,YAAA;MAAA,OAQH,CACN;IAAC;MAAAF,QAAA,EAAAjC,YAAA;MAAAkC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN5B,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBtB,OAAA;QACEqB,SAAS,EAAC,gCAAgC;QAC1CQ,KAAK,EAAEzB,KAAM;QACb0B,QAAQ,EAAGC,CAAC,IAAK1B,QAAQ,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAmB;QAAAP,QAAA,EAAAjC,YAAA;QAAAkC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACF5B,OAAA;QACEkC,OAAO,EAAEf,UAAW;QACpBE,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EACrD;MAED;QAAAI,QAAA,EAAAjC,YAAA;QAAAkC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAF,QAAA,EAAAjC,YAAA;MAAAkC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAF,QAAA,EAAAjC,YAAA;IAAAkC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CApEuBO,GAAG;EAAA,QAKAH,SAAS;AAAA;AAAAqC,EAAA,GALZlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}