{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/chetan/Desktop/research&report_writing agent/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useStream } from \"@langchain/langgraph-sdk/react\";\nimport \"./App.css\";\nimport ReactMarkdown from 'react-markdown';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/* <ReactMarkdown>{report}</ReactMarkdown> */}\nexport default function App() {\n  _s();\n  const [threadId, onThreadId] = useSearchParam(\"threadId\");\n  const [partialResponse, setPartialResponse] = useState(\"\");\n  const [finalMessages, setFinalMessages] = useState([]);\n  useEffect(() => {\n    console.log(partialResponse);\n  }, [partialResponse]);\n\n  //  console.log('refreshed')\n  const thread = useStream({\n    apiUrl: \"http://127.0.0.1:9090\",\n    // apiUrl: \"http://127.0.0.1:2023\",\n    threadId,\n    onThreadId,\n    assistantId: \"agent\",\n    messagesKey: \"messages\",\n    onFinish: finalevent => {\n      setPartialResponse(\"\");\n      setFinalMessages(thread.messages);\n      // setFinalMessages(thread.messages); \n      ; // clear partial\n    },\n    onCustomEvent: (event, options) => {\n      setPartialResponse(event);\n    } //for custom data stream by get_stream_writer\n\n    // onCustomEvent: for custom event handler\n  });\n\n  // useEffect(()=>{thread.events.forEach(element => {\n\n  // });((e)=>{console.log(e)})})\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [finalMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role === \"human\" ? \"user\" : \"bot\"}`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), partialResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: partialResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-bar\",\n      onSubmit: e => {\n        e.preventDefault();\n        const form = e.target;\n        const message = new FormData(form).get(\"message\");\n        form.reset();\n        thread.submit({\n          task: message,\n          revision_number: 1,\n          max_revisions: 2\n        }, {\n          streamMode: [\"custom\"]\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Ask a question...\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), thread.isLoading ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => thread.stop(),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gwOvcMqI9ioc36S6xhIHfJfo6L0=\", true, function () {\n  return [useStream];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useStream","ReactMarkdown","useEffect","useState","jsxDEV","_jsxDEV","App","threadId","onThreadId","useSearchParam","partialResponse","setPartialResponse","finalMessages","setFinalMessages","console","log","thread","apiUrl","assistantId","messagesKey","onFinish","finalevent","messages","onCustomEvent","event","options","className","children","map","msg","role","content","fileName","lineNumber","columnNumber","id","onSubmit","e","preventDefault","form","target","message","FormData","get","reset","submit","task","revision_number","max_revisions","streamMode","type","name","placeholder","autoComplete","isLoading","onClick","stop","_c","$RefreshReg$"],"sources":["/Users/chetan/Desktop/research&report_writing agent/frontend/src/App.js"],"sourcesContent":["\"use client\";\n\nimport { useStream } from \"@langchain/langgraph-sdk/react\";\n\nimport \"./App.css\";\nimport ReactMarkdown from 'react-markdown';\nimport { useEffect, useState } from \"react\";\n\n\n{/* <ReactMarkdown>{report}</ReactMarkdown> */}\n\n\nexport default function App() {\n\nconst [threadId, onThreadId] = useSearchParam(\"threadId\");\n\n\n  const [partialResponse ,setPartialResponse] =useState(\"\")\n    const [finalMessages, setFinalMessages] = useState([]);\n  useEffect(() => {\nconsole.log(partialResponse)\n}, [partialResponse]);\n\n//  console.log('refreshed')\n  const thread = useStream({\n    apiUrl: \"http://127.0.0.1:9090\",\n    // apiUrl: \"http://127.0.0.1:2023\",\n    threadId,\n    onThreadId,\n    assistantId: \"agent\",\n    messagesKey: \"messages\",\n    onFinish:(finalevent)=>{\n      setPartialResponse(\"\")\n      setFinalMessages(thread.messages); \n      // setFinalMessages(thread.messages); \n      ; // clear partial\n      },\n    onCustomEvent: (event, options) => {setPartialResponse(event)}    //for custom data stream by get_stream_writer\n    \n    // onCustomEvent: for custom event handler\n    \n  });\n\n// useEffect(()=>{thread.events.forEach(element => {\n  \n// });((e)=>{console.log(e)})})\n\n  return (\n    <div className=\"chat-container\">\n <div className=\"messages\">\n        {finalMessages.map((msg) => (\n          <div\n            key={msg.id}\n            className={`message ${msg.role === \"human\" ? \"user\" : \"bot\"}`}\n          >\n            <ReactMarkdown>{msg.content}</ReactMarkdown>\n          </div>\n        ))}\n\n        {/* Live-streaming partial output */}\n        {partialResponse && (\n          <div className=\"message bot\">\n            <ReactMarkdown>{partialResponse}</ReactMarkdown>\n          </div>\n        )}\n      </div>\n\n      {/* Input bar */}\n      <form\n        className=\"input-bar\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          const form = e.target;\n          const message = new FormData(form).get(\"message\");\n          form.reset();\n\n          thread.submit({\n          task: message,          \n          revision_number: 1,\n          max_revisions: 2,\n          },{streamMode:[\"custom\"]});\n\n        }}\n      >\n       \n\n        {/* Input */}\n        <input\n          type=\"text\"\n          name=\"message\"\n          placeholder=\"Ask a question...\"\n          autoComplete=\"off\"\n        />\n\n        {/* Send/Stop Button */}\n        {thread.isLoading ? (\n          <button type=\"button\" onClick={() => thread.stop()}>\n            Stop\n          </button>\n        ) : (\n          <button type=\"submit\">Send</button>\n        )}\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}