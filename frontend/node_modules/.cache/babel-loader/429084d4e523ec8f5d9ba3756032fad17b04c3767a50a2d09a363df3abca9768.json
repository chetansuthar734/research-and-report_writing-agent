{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/chetan/Desktop/research&report_writing agent/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useStream } from \"@langchain/langgraph-sdk/react\";\nimport \"./App.css\";\nimport ReactMarkdown from 'react-markdown';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/* <ReactMarkdown>{report}</ReactMarkdown> */}\nexport default function App() {\n  _s();\n  const [custom, setCustom] = useState([]);\n  useEffect(() => {\n    console.log(custom);\n  }, [custom]);\n\n  //  console.log('refreshed')\n  const thread = useStream({\n    apiUrl: \"http://127.0.0.1:9090\",\n    // apiUrl: \"http://127.0.0.1:2023\",\n    assistantId: \"agent\",\n    messagesKey: \"messages\",\n    onFinish: finalevent => {\n      setCustom([finalevent]);\n    },\n    onCustomEvent: (event, options) => {\n      setCustom(event);\n    }\n\n    // onCustomEvent: for custom event handler\n  });\n\n  // useEffect(()=>{thread.events.forEach(element => {\n\n  // });((e)=>{console.log(e)})})\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: thread.messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role === \"human\" ? \"user\" : \"bot\"}`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-bar\",\n      onSubmit: e => {\n        e.preventDefault();\n        const form = e.target;\n        const message = new FormData(form).get(\"message\");\n        form.reset();\n        thread.submit({\n          task: message,\n          revision_number: 1,\n          max_revisions: 2\n        }, {\n          streamMode: [\"custom\"]\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Ask a question...\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), thread.isLoading ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => thread.stop(),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG/UnZfDDHu9W+3UxbAabGfkRbo=\", false, function () {\n  return [useStream];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useStream","ReactMarkdown","useEffect","useState","jsxDEV","_jsxDEV","App","custom","setCustom","console","log","thread","apiUrl","assistantId","messagesKey","onFinish","finalevent","onCustomEvent","event","options","className","children","messages","map","msg","role","content","fileName","lineNumber","columnNumber","id","onSubmit","e","preventDefault","form","target","message","FormData","get","reset","submit","task","revision_number","max_revisions","streamMode","type","name","placeholder","autoComplete","isLoading","onClick","stop","_c","$RefreshReg$"],"sources":["/Users/chetan/Desktop/research&report_writing agent/frontend/src/App.js"],"sourcesContent":["\"use client\";\n\nimport { useStream } from \"@langchain/langgraph-sdk/react\";\n\nimport \"./App.css\";\nimport ReactMarkdown from 'react-markdown';\nimport { useEffect, useState } from \"react\";\n\n\n{/* <ReactMarkdown>{report}</ReactMarkdown> */}\n\n\nexport default function App() {\n  const [custom ,setCustom] =useState([])\n\n  useEffect(() => {\nconsole.log(custom)\n}, [custom]);\n\n//  console.log('refreshed')\n  const thread = useStream({\n    apiUrl: \"http://127.0.0.1:9090\",\n    // apiUrl: \"http://127.0.0.1:2023\",\n    assistantId: \"agent\",\n    messagesKey: \"messages\",\n    onFinish:(finalevent)=>{setCustom([finalevent])},\n    onCustomEvent: (event, options) => {setCustom(event)}\n    \n    // onCustomEvent: for custom event handler\n    \n  });\n\n// useEffect(()=>{thread.events.forEach(element => {\n  \n// });((e)=>{console.log(e)})})\n\n  return (\n    <div className=\"chat-container\">\n\n      <div className=\"messages\">\n        {thread.messages.map((msg) => (\n          <div\n            key={msg.id}\n            className={`message ${msg.role === \"human\" ? \"user\" : \"bot\"}`}\n          >\n            <ReactMarkdown>{msg.content}</ReactMarkdown>\n          </div>\n        ))}\n      </div>\n\n      {/* Input bar */}\n      <form\n        className=\"input-bar\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          const form = e.target;\n          const message = new FormData(form).get(\"message\");\n          form.reset();\n\n          thread.submit({\n          task: message,          \n          revision_number: 1,\n          max_revisions: 2,\n          },{streamMode:[\"custom\"]});\n\n        }}\n      >\n       \n\n        {/* Input */}\n        <input\n          type=\"text\"\n          name=\"message\"\n          placeholder=\"Ask a question...\"\n          autoComplete=\"off\"\n        />\n\n        {/* Send/Stop Button */}\n        {thread.isLoading ? (\n          <button type=\"button\" onClick={() => thread.stop()}>\n            Stop\n          </button>\n        ) : (\n          <button type=\"submit\">Send</button>\n        )}\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}